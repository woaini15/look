<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	
	<!-- SSM -->
	<!-- 配置扫描注解定义的业务bean 【190页】 实现类 -->
	<context:component-scan base-package="com.service.impl"></context:component-scan>    
	
	<!-- 读取数据库配置文件 [356页] -->
    <context:property-placeholder location="classpath:database.properties"/>
	
	<!-- JNDI获取数据源(使用dbcp连接池) -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
    		<property name="driverClassName" value="${driver}" />  
			<property name="url" value="${url}" />  
			<property name="username" value="${user}" />  
			<property name="password" value="${password}" />
			<property name="initialSize" value="${initialSize}"/>
			<property name="maxActive" value="${maxActive}"/>
			<property name="maxIdle" value="${maxIdle}"/>
			<property name="minIdle" value="${minIdle}"/>
			<property name="maxWait" value="${maxWait}"/>
			<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
			<property name="removeAbandoned" value="${removeAbandoned}"/>
			<!-- sql 心跳 -->
			<property name= "testWhileIdle" value="true"/>
			<property name= "testOnBorrow" value="false"/>
			<property name= "testOnReturn" value="false"/>
			<property name= "validationQuery" value="select 1"/>
			<property name= "timeBetweenEvictionRunsMillis" value="60000"/>
			<property name= "numTestsPerEvictionRun" value="${maxActive}"/>
    </bean>
	
	<!-- 定义事务管理器 [193页] -->
   	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<property name="dataSource" ref="dataSource"/>
   	</bean> 
   	
   	<!-- AOP 事务处理 开始  定义切面 [194页]-->    
	<aop:aspectj-autoproxy />
	<!-- 通过 tx:advice 标签指定事务管理器设置事务属性（也就是指定哪些方法用到事务管理） [193页]-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
	    <tx:attributes>  
	       <tx:method name="*"  propagation="REQUIRED" rollback-for="Exception"  />
	    </tx:attributes>  
	</tx:advice> 
	<aop:config  proxy-target-class="true">
		<!-- expression 在书的 [140页] -->
		<aop:pointcut id="transService" expression="execution(* *com.service..*(..))" />
		<aop:advisor pointcut-ref="transService" advice-ref="txAdvice" />
	</aop:config> 
	<!-- AOP 事务处理 结束 -->
	
	
	<!-- 2、配置mybatis sqlSessionFactoryBean 182页 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引用数据源组件 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 引用myBatis配置文件中配置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 配置SQL映射文件信息 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/dao/*.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 指定dao层包中的接口并将它们直接注册为MapperFactoryBean [188页] -->
	<!-- 使用MapperFactoryBean注入映射器,不需要dao层的实现类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dao"/>
	</bean>
	
</beans>